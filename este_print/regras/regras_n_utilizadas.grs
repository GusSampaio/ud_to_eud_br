package deep_subj_all{

% If a present participle PART is an ACL dependent of N without any MARK relation, its deep subject is N.
  rule acl_part-pres{
    pattern{
      PART[Dupos=VERB,DVerbForm=Conv|Part, DTense=Pres];
      N -[1=acl]-> PART}
    without{N -[acl:relcl|E:acl:relcl]-> PART}
    without{PART -[mark]-> *}
    without{PART[NullSubject=Yes]}
    without{PART -[1=csubj|nsubj]-> *}
    commands{add_edge PART -[E:nsubj]-> N}
  }

% If a past participle PART is an ACL dependent of N without any MARK relation, its deep passive subject is N.
  rule acl_part-past{
    pattern{
      PART[Dupos=VERB,DVerbForm=Part, DTense=Past];
      N -[1=acl]-> PART}
    without{N -[acl:relcl|E:acl:relcl]-> PART}
    without{PART[NullSubject=Yes]}
    without{PART -[mark]-> *}
    without{PART -[1=csubj|nsubj]-> *}
    commands{add_edge PART -[1=nsubj,2=pass,enhanced=yes]-> N}
  }

% If an adjective ADJ is attributive of a noun N, its subject is N.
  rule amod{
    pattern{ADJ[Dupos=ADJ]; N -[1=amod]-> ADJ}
    without{ADJ -[1=csubj|nsubj]-> *}
    without{N[NullSubject=Yes]}
    commands{add_edge ADJ -[E:nsubj]-> N}
  }

% If a predicate DPRED, which is not a finite verb, a past participe or a passive verb, is an ADVCL dependent of PRED, its deep subject is the subject SUBJ of PRED.
%Ex: UD_French-GSD fr-ud-train_03936 - Très laide[DPRED], elle[SUBJ] provoquerait[PRED] l'effroi en la voyant.
%Ex: UD_English-EWT email-enronsent23_14-0009  - plus we[SUBJ] can be outside[PRED] watching[DPRED] it.
  rule advcl_nsubj{
    pattern{
      PRED -[advcl]-> DPRED; DPRED[Dupos=ADJ|VERB];
      PRED -[1=nsubj]-> SUBJ}
    without{DPRED[DVerbForm=Part, DTense=Past]}
    without{PRED -[1=nsubj,2=pass]-> SUBJ; DPRED[DVerbForm=Inf]; DPRED -[1=mark]-> *}
    without{DPRED[DVerbForm=Fin]}
    without{DPRED[NullSubject=Yes]}
    without{DPRED -[aux:pass]-> *}
    without{DPRED -[1=nsubj]-> *}
    without{DPRED -[expl:subj]-> *}
    %without{DPRED -[mark]-> *} % This negative condition is excluded in French.
    commands{add_edge DPRED -[E:nsubj]-> SUBJ}
  }

% If a passive verb DPRED is an ADVCL dependent of PRED, its deep passive subject is the subject SUBJ of PRED.
%Ex:  UD_French-GSD fr-ud-train_00042 - Étant atteint[DPRED] du syndrome de Marfan, il est très grand[PRED] et mince.
  rule advcl_nsubj_aux-pass{
    pattern{
      PRED -[advcl]-> DPRED;
      PRED -[1=nsubj]-> SUBJ;
      DPRED -[aux:pass]-> *}
    without{DPRED[DVerbForm=Fin]}
    without{DPRED[NullSubject=Yes]}
    without{DPRED -[1=nsubj]-> *}
    without{DPRED -[expl:subj]-> *}
    commands{add_edge DPRED -[E:nsubj:pass]-> SUBJ}
  }

% If a past participle DPRED is an ADVCL dependent of PRED, its deep passive subject is the subject SUBJ of PRED.
%Ex:  UD_French-GSD fr-ud-train_13855 - Créé[DPRED] en janvier 1932, il[SUBJ] fut dissous[PRED] en 1964.
  rule advcl_nsubj_past-part{
    pattern{
      PRED -[advcl]-> DPRED;
      PRED -[1=nsubj]-> SUBJ;
      DPRED[DVerbForm=Part, DTense=Past]}
    without{PRED -[mark]-> *}
    without{DPRED[NullSubject=Yes]}
    without{DPRED -[1=nsubj]-> *}
    without{DPRED -[expl:subj]-> *}
    commands{add_edge DPRED -[E:nsubj:pass]-> SUBJ}
  }

% if a predicate DPRED in the active voice is a XCOMP dependent of an adverb ADV, which is a modifier of another predicate PRED, its deep subject is the subject SUBJ of PRED.
%Ex: UD_French-GSD fr-ud-test_00121 - Charles[NSUBJ] Mwando Nsimba a sollicité[PRED] un délai supplémentaire avant[ADV] de répondre[DPRED] aux préoccupations soulevées
  rule xcomp_nsubj_advmod{
    pattern{
      PRED -[1=nsubj]-> SUBJ;
      PRED -[advmod]-> ADV; ADV -[1=xcomp]-> DPRED}
    without{DPRED -[1=csubj|nsubj]-> *}
    without{DPRED -[aux:pass]-> *}
    without{DPRED[NullSubject=Yes]}
    without{DPRED[DVerbForm=Part, DTense=Past]}
    commands{add_edge DPRED -[E:nsubj]-> SUBJ}
  }

% if a predicate DPRED in the passive voice is a XCOMP dependent of an adverb ADV, which is a modifier of another predicate PRED, its deep subject is the subject SUBJ of PRED.
  rule xcomp_nsubj_advmod_aux-pass{
    pattern{
      PRED -[1=nsubj]-> SUBJ;
      PRED -[advmod]-> ADV; ADV -[1=xcomp]-> DPRED;
      DPRED -[aux:pass]-> *}
    without{DPRED[NullSubject=Yes]}
    without{DPRED -[1=csubj|nsubj]-> *}
    commands{add_edge DPRED -[E:nsubj:pass]-> SUBJ}
  }

% if a past participle DPRED is a XCOMP dependent of an adverb ADV, which is a modifier or a predicate PRED, it is supposed to have a deep passive subject, which is the subject SUBJ of PRED.
  rule xcomp_nsubj_advmod_past-part{
    pattern{
      PRED -[1=nsubj]-> SUBJ;
      PRED -[advmod]-> ADV; ADV -[1=xcomp]-> DPRED;
      DPRED[DVerbForm=Part, DTense=Past]}
    without{DPRED[NullSubject=Yes]}
    without{DPRED -[1=csubj|nsubj]-> *}
    commands{add_edge DPRED -[E:nsubj:pass]-> SUBJ}
  }

}

% =============================================================================================
% Propagation of left-hand outgoing ADVMOD dependencies of a coordination to all conjuncts. 
 rule coord_dep_left_advmod{
   pattern{
     CONJ1 -[1=conj]-> CONJ2;
     e:CONJ1 -[1=advmod]-> D; 
      D << CONJ1}
    without{CONJ2 -> D}
    commands{add_edge f:CONJ2 -> D; f.label = e.label; f.enhanced=yes}
  }

% =============================================================================================
% Propagation of left-hand outgoing  COP dependencies of a coordination to all conjuncts.
  rule coord_dep_left_cop{
    pattern{CONJ1 -[1=conj]-> CONJ2;CONJ1 -[cop]-> D; D[VerbForm]; D << CONJ1}
    without{ CONJ2 -[cop|E:cop]-> *}
    without{CONJ2[DVerbForm=Fin|Inf]}
    without{CONJ2 -[1=aux|cop]-> *}
    commands{ add_edge CONJ2 -[E:cop]-> D; CONJ2.DVerbForm = D.VerbForm}
  }

% =============================================================================================
% Propagation of left-hand outgoing OBL dependencies of a coordination to all conjuncts. 
 rule coord_dep_left_obl{
   pattern{
     CONJ1 -[1=conj]-> CONJ2;
     e:CONJ1 -[1=obl]-> D; 
      D << CONJ1}
    without{CONJ2 -> D}
    commands{add_edge f:CONJ2 -> D; f.label = e.label; f.enhanced=yes}
  }


% =============================================================================================
% Cleaning all provisional relations.
package cleaning_rel{
  rule amod_subj{
    pattern{N -[1=amod]-> ADJ; e: ADJ -[E:nsubj]-> N}
    commands{ del_edge e}
  }
}